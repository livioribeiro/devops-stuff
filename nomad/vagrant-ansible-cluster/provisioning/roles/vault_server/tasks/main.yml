---
- name: install vault
  copy:
    src: /vagrant/vault
    dest: /usr/local/bin/
    mode: 0755

- name: create vault service
  copy:
    src: vault.service
    dest: /etc/systemd/system/

- name: create vault config directory
  file:
    path: /etc/vault.d
    state: directory

- name: copy vault config
  template:
    src: config.hcl.j2
    dest: /etc/vault.d/config.hcl

- name: start vault
  service:
    name: vault
    state: restarted
    enabled: yes

- set_fact:
    vault_address: "http://{{ ansible_enp0s8.ipv4.address }}:8200"

- name: check init status
  command: "/usr/local/bin/vault operator init -address={{ vault_address }} -status"
  register: init_status
  changed_when: init_status.rc == 2
  failed_when: init_status == 1

- when: init_status.rc == 2
  block:
    - name: init vault
      command: "/usr/local/bin/vault operator init -address={{ vault_address }} -key-threshold=1 -key-shares=1 -format=json"
      register: init_result

    - name: save root token
      copy:
        dest: /etc/vault.d/root_token
        content: "{{ init_result.stdout|from_json|json_query('root_token') }}"

    - name: save unseal key
      copy:
        dest: /etc/vault.d/unseal_key
        content: "{{ init_result.stdout|from_json|json_query('unseal_keys_b64[0]') }}"

- name: check seal status
  command: "/usr/local/bin/vault status -address={{ vault_address }}"
  register: seal_status
  changed_when: init_status.rc == 2
  failed_when: init_status == 1

- when: seal_status.rc == 2
  block:
    - command: cat /etc/vault.d/unseal_key
      register: unseal_key
    - name: unseal vault
      command: "/usr/local/bin/vault operator unseal -address={{ vault_address }} {{ unseal_key.stdout }}"

- name: copy nomad server policy
  copy:
    src: nomad-server-policy.hcl
    dest: /tmp/
  register: nomad_server_policy

- name: write nomad server policy to vault
  command: vault policy write -address={{ vault_address }} nomad-server /tmp/nomad-server-policy.hcl
  when: nomad_server_policy.changed

- name: copy nomad cluster role
  copy:
    src: nomad-cluster-role.json
    dest: /tmp/
  register: nomad_cluster_role

- when: nomad_cluster_role.changed
  block:
    - name: write nomad cluster role to vault
      command:
        argv:
          - vault
          - write
          - -address={{ vault_address }}
          - /auth/token/roles/nomad-cluster
          - "@/tmp/nomad-cluster-role.json"
    - name: create nomad server token
      command: vault token create -address={{ vault_address }} -policy nomad-server -period 72h -orphan
      register: token_result
    - name: save nomad server token
      copy:
        dest: /etc/vault.d/nomad_token
        content: "{{ init_result.stdout|from_json|json_query('auth.client_token') }}"

- name: read nomad token
  command: cat /etc/vault.d/nomad_token
  register: nomad_token

- set_fact:
    vault_nomad_token: "{{ nomad_token.stdout }}"